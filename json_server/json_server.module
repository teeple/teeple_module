<?php
/**
 *
 *  A jSON server implementation for the services module.
 *
 */

/**
 *  Implementation of hook_server_info().
 */
function json_server_server_info() {
  return array(
    '#name' => 'JSON',
    '#path' => 'json'
  );
}


/**
 *  Implementation of hook_server_error().
 */
/*
function json_server_server_error($message) {
  return array("#error" => TRUE, "#message" => $message);
}
*/
function json_server_server_error($message, $code) {
  return array("#error" => TRUE, "#message" => $message, "#error_no" => $code);
}


/**
 *  Implementation of hook_server().
 */
function json_server_server() {

if (!isset($_POST)) {
  return drupal_to_js(array('#error' => TRUE, '#data' => "JSON server accepts POST requests only."));
}

  $methods = services_get_all();

  watchdog('json rcvd', 'post='.print_r($_POST,TRUE));
  // tvchat_log('json_rcvd '.print_r($_POST,TRUE));

  services_strip_hashes($methods);
  $request = drupal_parse_json($_POST['method']);
  $args = array();

  foreach ($methods as $method) {
    if ($method['method'] == $request) {
      unset($_POST['q']);
      unset($_POST['method']);
      $args = array();
      foreach($method['args'] as $arg) {
        if(isset($_POST[$arg['name']])) {
          $args[] = drupal_parse_json($_POST[$arg['name']]);
        }
        elseif($arg['optional'] == 0) {
          return drupal_to_js(array("#error" => TRUE, "#data" => "Argument ". $arg['name'] ." not recieved"));
        }
        else {
          $args[$arg['name']] = NULL;
        }
      }

        // tvchat_log('['.$method['method'].']:req:'.print_r($_POST,TRUE));
        $result = services_method_call($method['method'], $args);

		// watchdog('json2', 'args='.print_r($args,TRUE).'result='.print_r( $result, TRUE));

      if (is_array($result) && ($result['#error'] == TRUE || $result['#error'] == 1)) 
      {
		// watchdog('json2here', 'args='.print_r($args,TRUE).'result='.print_r( $result, TRUE));
        // return drupal_to_js(array('#error' => TRUE, '#data' => $result['#message']));
        $return_arr = array('error_no' => $result['#error_no'], 'message' => $result['#message']);
        watchdog('return', drupal_to_js(array('#error' => TRUE, '#data' => $return_arr)));
        // return drupal_to_js(array('#error' => TRUE, '#data' => $return_arr));
        return drupal_to_js(array('#error' => TRUE, '#data' => $return_arr));
      }

      watchdog('return', json_encode(array('#error' => FALSE, '#data' => $result)));
      // return drupal_to_js(array('#error' => FALSE, '#data' => $result));
      return json_encode(array('#error' => FALSE, '#data' => $result));
    }
  }

  $ret_value = drupal_to_js(array('#error' => TRUE, '#data' => "Invalid method $request"));

  // tvchat_log('['.$method['method'].']:ret:'.$ret_value);

   /*
  $usernames_for_tracking = explode(',',variable_get('usernames_for_tracking', 'youngmin@uangel.kr'));
  foreach($usernames_for_tracking as $username) {
    watchdog($username, '['.$method['method'].']:ret:'.$ret_value);
  }
  */

  return $ret_value;
}
      

/**
 *  Load the needed assets to run the server via js.
 */
function json_load() {
  global $base_url;
  $path = drupal_get_path("module", "json_server");
  drupal_add_js($path ."/json_server.js");
  drupal_add_js(array("baseurl" => $base_url ."/"), 'setting');
}

function drupal_parse_json($v) {
  // PHP 5 only
  if (function_exists('json_decode')) {
    // watchdog('before json parsing', $v);
    return json_decode($v,TRUE);  // bhtak: add 'TRUE' parameter to convert to array
  }
  if ($v{0} == '"') {
    $v = substr($v, 1, -1);
  }
  elseif ($v{0} == '{') {
    $var = explode(",", substr($v, 1, -2));
    $v = array();
    foreach ($var as $value) {
      $va = explode(":", $value);
      $v[$va[0]] = drupal_parse_json($va[1]);
    }
  }
  elseif ($v{0} == '[') {
    $var = explode(",", substr($v, 1, -2));
    $v = array();
    foreach ($var as $value) {
      $v[] = drupal_parse_json($va[0]);
    }
  }
  return $v;
}
